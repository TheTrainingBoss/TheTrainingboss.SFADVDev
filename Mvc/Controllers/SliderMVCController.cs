/* ------------------------------------------------------------------------------
<auto-generated>
    This file was generated by Sitefinity CLI v1.1.0.9
</auto-generated>
------------------------------------------------------------------------------ */

using TheTrainingboss.SFADVDev.Mvc.Models;
using System.Web.Mvc;
using Telerik.Sitefinity.Mvc;
using Telerik.Sitefinity.Personalization;
using System.Linq;
using Telerik.Sitefinity.DynamicModules.Model;
using Telerik.Sitefinity.DynamicModules;
using System;
using Telerik.Sitefinity.Utilities.TypeConverters;
using Telerik.Sitefinity.GenericContent.Model;

namespace TheTrainingboss.SFADVDev.Mvc.Controllers
{
	[ControllerToolboxItem(Name = "SliderMVC", Title = "Slider MVC", SectionName = "SFADVDev")]
	public class SliderMVCController : Controller, IPersonalizable
	{
		// GET: SliderMVC
		public ActionResult Index()
		{
			var items = RetrieveCollectionOfParallaxItems();

			var model = new SliderMVCModel(items);
			
			return View(model);
		}

        private IQueryable<DynamicContent> RetrieveCollectionOfParallaxItems()
        {
			var providerName = "OpenAccessProvider";
			DynamicModuleManager dynamicModuleManager = DynamicModuleManager.GetManager(providerName);
			Type parallaxitemType = TypeResolutionService.ResolveType("Telerik.Sitefinity.DynamicTypes.Model.Carousel.Slide");

			var myCollection = dynamicModuleManager.GetDataItems(parallaxitemType).Where(p => p.Status == ContentLifecycleStatus.Live);

			return myCollection;
		}

        protected override void HandleUnknownAction(string actionName)
        {
            this.ActionInvoker.InvokeAction(this.ControllerContext, "Index");
        }
	}
}